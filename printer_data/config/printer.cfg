
# host MCU service is preinstalled and ready to use with:
[mcu CB1]
serial: /tmp/klipper_host_mcu


[exclude_object]
[include cfg/*.cfg]
# [include klicky/*.cfg]
[include KAMP_Settings.cfg]

[pause_resume]
recover_velocity: 300.0


[force_move]
enable_force_move: True

[respond]
default_type: echo
default_prefix:

############################################################
############################################################
############################################################

[adxl345]
cs_pin: PA15
spi_bus: spi3a

# [mcu adxl]
# serial: /dev/serial/by-id/usb-Klipper_rp2040_E66368254F299929-if00 

# [adxl345]
# cs_pin: adxl:gpio9
# spi_software_sclk_pin: adxl:gpio10
# spi_software_mosi_pin: adxl:gpio11
# spi_software_miso_pin: adxl:gpio12

[resonance_tester]
max_freq: 200
accel_chip: adxl345
probe_points:
    160, 150, 20  # an example
accel_per_hz: 150    






############################################################
############################################################
############################################################

    
[heater_bed]
heater_pin: PF5
sensor_pin: PB1 # TB 
sensor_type: ATC Semitec 104GT-2
min_temp: -100
max_temp: 130
control: pid
pid_Kp: 57.872
pid_Ki: 1.621
pid_Kd: 516.507

[temperature_fan CB1_fan]
pin: PF6
target_temp: 45
sensor_type: temperature_host
min_temp: 0
max_temp: 150
control: watermark
min_speed: 0.4
max_speed: 1.0

[temperature_fan electronics_fan]
pin: PA4
target_temp: 40
sensor_type: temperature_mcu
min_temp: 0
max_temp: 150
control: watermark
min_speed: 0.4
max_speed: 0.6

[temperature_sensor stepper_x]
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
min_temp: -100
max_temp: 150


[temperature_sensor stepper_y]
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
min_temp: -100
max_temp: 300

[temperature_sensor chamber]  optional for chamber temp
sensor_type: NTC 100K MGB18-104F39050L32
pullup_resistor: 4700
sensor_pin: PA7
min_temp: -100
max_temp: 150
gcode_id: C: C

[fan]
pin: PD15
enable_pin: PA1
#hardware_pwm: True
cycle_time: 0.00004
off_below: 0.10
kick_start_time:Â 0.01


#Fan1
[heater_fan hotend_fan]
pin: PF7
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0

[fan_generic RSCS]
#  RSCS Fans - In FAN1 Positon
pin: PF9
max_power: 1
shutdown_speed: 0
kick_start_time: 0.1
off_below: 0.10

[fan_generic Exhaust_fan]
#  exhaust fan - In FAN4
pin: PF8
max_power: 1
shutdown_speed: 0
kick_start_time: 0.1
off_below: 0.10


[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_200027000B51313236343430-if00 #/dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00

[printer]
kinematics: corexy
max_velocity: 1000
max_accel: 80000
max_z_velocity: 20
max_z_accel: 1000
square_corner_velocity: 25

############################################################
############################################################
############################################################

[safe_z_home]
home_xy_position: 150, 150
z_hop: 10


[idm]
serial: /dev/serial/by-id/usb-IDM_614e_1D0007000A43304253373820-if00
#   Path to the serial port for the idm device. Typically has the form
#   /dev/serial/by-id/usb-idm_idm_...
#canbus_uuid:
speed: 40.
#   Z probing dive speed.
lift_speed: 5.
#   Z probing lift speed.
backlash_comp: 0.5
#   Backlash compensation distance for removing Z backlash before measuring
#   the sensor response.
x_offset: 0.
#   X offset of idm from the nozzle.
y_offset: 21.1
#   Y offset of idm from the nozzle.
trigger_distance: 2.
#   idm trigger distance for homing.
trigger_dive_threshold: 1.5
#   Threshold for range vs dive mode probing. Beyond `trigger_distance +
#   trigger_dive_threshold` a dive will be used.
trigger_hysteresis: 0.006
#   Hysteresis on trigger threshold for untriggering, as a percentage of the
#   trigger threshold.
cal_nozzle_z: 0.1
#   Expected nozzle offset after completing manual Z offset calibration.
cal_floor: 0.1
#   Minimum z bound on sensor response measurement.
cal_ceil:5.
#   Maximum z bound on sensor response measurement.
cal_speed: 1.0
#   Speed while measuring response curve.
cal_move_speed: 10.
#   Speed while moving to position for response curve measurement.
default_model_name: default
#   Name of default idm model to load.
mesh_main_direction: x
#   Primary travel direction during mesh measurement.
#mesh_overscan: -1
#   Distance to use for direction changes at mesh line ends. Omit this setting
#   and a default will be calculated from line spacing and available travel.
mesh_cluster_size: 1
#   Radius of mesh grid point clusters.
mesh_runs: 2
#   Number of passes to make during mesh scan.
tc_a_a: 2.1507292667567152e-05
tc_a_b:-1.2782968181459238
tc_b_a:-0.005161750145818773
tc_b_b:306.7912257191589


[lis2dw]
cs_pin: idm:PA3
spi_bus: spi1

# [resonance_tester]
# max_freq: 200
# accel_chip: lis2dw
# probe_points:
#     160, 150, 20  # an example
# accel_per_hz: 150    

[motors_sync]
accel_chip:lis2dw
#    Accelerometer for collecting vibrations adxl345 / mpu9250 / lis2dw, etc.
microsteps: 16
#    Maximum microstepping of stepper motor rotor displacement, not worth
#    increase the value above 16, do so at your own peril and risk.
steps_threshold: 999999
#    Coefficient of number of microsteps of shaft displacement, depending 
#    on the magnitude value (impact), adjusted experimentally. Let's say
#    if our impact was 50,000 units, and the coeff was 10,000 - the motor
#    will move in 5 microsteps at a time to save time.
fast_threshold: 999999
#    Threshold up to which the motor will not perform decaying oscillations,
#    to save time, due to the already high deviations. Be very be careful
#    when decreasing the value of this parameter.
retry_tolerance: 999999
#    Forced threshold to which a pair of stepper motors should will omit
#    deviations. After several runs calibration, you will find the limit 
#    to which you can lower this parameter.
retries: 0
#    Maximum number of repetitions to achieve forced motor synchronization
#    deviation threshold.
respond: True
#    Enable / disable debugging of intermediate measurements.

# [probe]
# pin:PF1
# x_offset: 0
# y_offset: 30.0
# #z_offset: 0
# speed: 10.0
# samples: 2

[bed_mesh]
speed: 500
horizontal_move_z: 10
mesh_min: 20, 30
mesh_max: 300, 270
probe_count: 20,20
algorithm: bicubic

[screws_tilt_adjust]
screw1: 20,0
screw1_name: Front Left
screw2: 300,0
screw2_name: Front Right
screw3: 300,270
screw3_name: Rear Right,
screw4: 20, 270
screw4_name: Rear Left,
speed: 500
horizontal_move_z: 10
screw_thread: CW-M4

[bed_screws]
screw1: 20,20
screw1_name: Front Left
screw2: 300,20
screw2_name: Front Right
screw3: 300,290
screw3_name: Rear Right,
screw4: 20, 290
screw4_name: Rear Left,
speed: 500
horizontal_move_z: 15
# screw_thread: CW-M4


[pwm_cycle_time _beeper]
pin: PE9
value: 0
shutdown_value: 0
cycle_time: 0.0005

[gcode_macro M300]
gcode:
    {% set S = params.S|default(1000)|int %} ; S sets the tone frequency
    {% set P = params.P|default(100)|int %} ; P sets the tone duration
    {% set L = 0.5 %} ; L varies the PWM on time, close to 0 or 1 the tone gets a bit quieter. 0.5 is a symmetric waveform
    {% if S <= 0 %} ; dont divide through zero
        {% set F = 1 %}
        {% set L = 0 %}
    {% elif S >= 10000 %} ;max frequency set to 10kHz
        {% set F = 0 %}
    {% else %}
        {% set F = 1/S %} ;convert frequency to seconds
    {% endif %}
    SET_PIN PIN=_beeper VALUE={L} CYCLE_TIME={F} ;Play tone
    G4 P{P} ;tone duration
    SET_PIN PIN=_beeper VALUE=0
    


[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 0.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 270.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 100.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 1.0   ; the value to retract while PAUSE
variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 35.0  ; retract speed in mm/s
variable_unretract        : 1.0   ; the value to unretract while RESUME
variable_speed_unretract  : 35.0  ; unretract speed in mm/s
variable_speed_hop        : 15.0  ; z move speed in mm/s
variable_speed_move       : 400.0 ; move speed in mm/s
variable_park_at_cancel   : True ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
gcode:

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE7, EXP1_2=PG1,
    EXP1_3=PG0, EXP1_4=PF15,
    EXP1_5=PF14, EXP1_6=PF13,    # Slot in the socket on this side
    EXP1_7=PF12, EXP1_8=PF11,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PE13, EXP2_2=PE12,
    EXP2_3=PE15, EXP2_4=PE11,
    EXP2_5=PE10, EXP2_6=PE14,      # Slot in the socket on this side
    EXP2_7=PE8, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<NC>

# See the sample-lcd.cfg file for definitions of common LCD displays.
# # Fan0
# [fan]
# pin: PF7



## Fan2
#[heater_fan fan2]
#pin: PF6

## Fan3
#[heater_fan fan3]
#pin: PF8

## Fan4
#[heater_fan fan4]
#pin: PA4

## Fan5
#[heater_fan fan5]
#pin: PA6
#tachometer_pin: PC2

## Fan6
#[heater_fan fan6]
#pin: PA2
#tachometer_pin: PC1


#[fan_generic soc-fan]
#pin: host:gpio79  #CB1
#pin: host:gpio26  #CM4



#[bltouch]
#sensor_pin: PD13
#control_pin: PD12

## Proximity switch
#[probe]
#pin: PD8

#[output_pin ps_on_pin]
#pin: PD14

#[neopixel my_neopixel_1]
#pin: PD15

#[hall_filament_width_sensor]
#adc1: PC0
#adc2: PF10

# This file contains common pin mappings for the BIGTREETECH Manta M8P V2.0
# To use this config, the firmware should be compiled for the
# STM32H723 with a "128KiB bootloader" "25 MHz crystal"
# and "USB (on PA11/PA12)", "CAN bus (on PD0/PD1)" or Serial (on USART1 PA10/PA9).

# See docs/Config_Reference.md for a description of parameters.

## End-Stop 5
#[filament_switch_sensor material_0]
#switch_pin: PF0

# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

## End-Stop 6
#[filament_switch_sensor material_1]
#switch_pin: PC15

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.033176, -0.028010, -0.033443, -0.039581, -0.046186, -0.048090, -0.054905
#*# 	  -0.059208, -0.057903, -0.065364, -0.067274, -0.076874, -0.080404, -0.082012
#*# 	  -0.077763, -0.080824, -0.077015, -0.080727, -0.096771, -0.099166, -0.095832
#*# 	  -0.078318, -0.074570, -0.070063, -0.077214, -0.094127, -0.103269, -0.100025
#*# 	  -0.045418, -0.043413, -0.039838, -0.047863, -0.064494, -0.072206, -0.073219
#*# 	  -0.002694, -0.003581, -0.003989, -0.011912, -0.023492, -0.032981, -0.035817
#*# 	  0.009034, 0.008736, 0.009079, -0.002357, -0.015241, -0.023235, -0.028615
#*# 	  0.000819, 0.005247, 0.005124, -0.006772, -0.020619, -0.029196, -0.034781
#*# x_count = 7
#*# y_count = 8
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 116.5
#*# max_x = 203.5
#*# min_y = 113.25
#*# max_y = 196.75
#*#
#*# [probe]
#*# z_offset = 6.400
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 117.6
#*# shaper_type_y = mzv
#*# shaper_freq_y = 77.4
#*#
#*# [idm model default]
#*# model_coef = 1.5123657546475147,
#*# 	  1.9167625964511,
#*# 	  0.7251792086446749,
#*# 	  0.20447286957132896,
#*# 	  0.35527024746137104,
#*# 	  0.7881021336304047,
#*# 	  -0.22503803672269243,
#*# 	  -1.0664703603264936,
#*# 	  0.18308869260899932,
#*# 	  0.6105182454183145
#*# model_domain = 3.2238804891644505e-07,3.2901760748578903e-07
#*# model_range = 0.100000,5.000000
#*# model_temp = 57.837810
#*# model_offset = 0.50000
